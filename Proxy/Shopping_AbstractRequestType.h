// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"

// abstract class


/**
 
 Base type definition of the request payload, which can carry any type
 of payload content plus optional versioning information and detail level requirements.
 All concrete request types are derived from the abstract request type.
 The naming convention we use for the concrete type names is the name of the service
 (the verb or call name) followed by "RequestType": VerbNameRequestType
 
 
 @ingroup ShoppingInterface
*/
@interface Shopping_AbstractRequestType : NSObject <PicoBindable> {

@private
    NSString *_messageID;
    NSMutableArray *_any;

}


/**
 
 If you pass a value in MessageID in a request,
 we'll return the same value in CorrelationID in the response.
 If you're making a lot of calls, you can use this for tracking that a
 response is returned for every request and to match
 particular responses to particular requests. (In this case, specify
 a different value for each request.) You can specify any value
 that is useful to you.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *messageID;

/**
 (public property)
 
 entry type : PicoAnyElement, wrapper for primitive anyelement
*/

@property (nonatomic, retain) NSMutableArray *any;


@end
