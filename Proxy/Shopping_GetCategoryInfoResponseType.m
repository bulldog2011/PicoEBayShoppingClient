// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Shopping_GetCategoryInfoResponseType.h"
#import "Shopping_CategoryArrayType.h"

@implementation Shopping_GetCategoryInfoResponseType

@synthesize categoryArray = _categoryArray;
@synthesize categoryCount = _categoryCount;
@synthesize updateTime = _updateTime;
@synthesize categoryVersion = _categoryVersion;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    PicoClassSchema *cs = [[PicoClassSchema alloc] initWithXmlName:@"GetCategoryInfoResponse" nsUri:@"urn:ebay:apis:eBLBaseComponents"];
    [cs autorelease];
    return cs;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CategoryArray" propertyName:@"categoryArray" type:PICO_TYPE_OBJECT clazz:[Shopping_CategoryArrayType class]];
    [map setObject:ps forKey:@"categoryArray"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CategoryCount" propertyName:@"categoryCount" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"categoryCount"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"UpdateTime" propertyName:@"updateTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"updateTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"CategoryVersion" propertyName:@"categoryVersion" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"categoryVersion"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.categoryArray = nil;
    self.categoryCount = nil;
    self.updateTime = nil;
    self.categoryVersion = nil;
    [super dealloc];
}

@end
