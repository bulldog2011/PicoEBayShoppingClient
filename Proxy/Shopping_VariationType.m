// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Shopping_VariationType.h"
#import "Shopping_SellingStatusType.h"
#import "Shopping_AmountType.h"
#import "Shopping_DiscountPriceInfoType.h"
#import "Shopping_NameValueListArrayType.h"

@implementation Shopping_VariationType

@synthesize sku = _sku;
@synthesize startPrice = _startPrice;
@synthesize quantity = _quantity;
@synthesize variationSpecifics = _variationSpecifics;
@synthesize quantitySold = _quantitySold;
@synthesize sellingStatus = _sellingStatus;
@synthesize discountPriceInfo = _discountPriceInfo;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SKU" propertyName:@"sku" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"sku"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"StartPrice" propertyName:@"startPrice" type:PICO_TYPE_OBJECT clazz:[Shopping_AmountType class]];
    [map setObject:ps forKey:@"startPrice"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"Quantity" propertyName:@"quantity" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"quantity"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"VariationSpecifics" propertyName:@"variationSpecifics" type:PICO_TYPE_OBJECT clazz:[Shopping_NameValueListArrayType class]];
    [map setObject:ps forKey:@"variationSpecifics"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"QuantitySold" propertyName:@"quantitySold" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"quantitySold"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"SellingStatus" propertyName:@"sellingStatus" type:PICO_TYPE_OBJECT clazz:[Shopping_SellingStatusType class]];
    [map setObject:ps forKey:@"sellingStatus"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"DiscountPriceInfo" propertyName:@"discountPriceInfo" type:PICO_TYPE_OBJECT clazz:[Shopping_DiscountPriceInfoType class]];
    [map setObject:ps forKey:@"discountPriceInfo"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.sku = nil;
    self.startPrice = nil;
    self.quantity = nil;
    self.variationSpecifics = nil;
    self.quantitySold = nil;
    self.sellingStatus = nil;
    self.discountPriceInfo = nil;
    self.any = nil;
    [super dealloc];
}

@end
