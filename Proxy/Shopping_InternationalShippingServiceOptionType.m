// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "Shopping_InternationalShippingServiceOptionType.h"
#import "Shopping_AmountType.h"

@implementation Shopping_InternationalShippingServiceOptionType

@synthesize shippingInsuranceCost = _shippingInsuranceCost;
@synthesize shippingServiceName = _shippingServiceName;
@synthesize shippingServiceAdditionalCost = _shippingServiceAdditionalCost;
@synthesize shippingServiceCost = _shippingServiceCost;
@synthesize shippingServicePriority = _shippingServicePriority;
@synthesize shipsTo = _shipsTo;
@synthesize estimatedDeliveryMinTime = _estimatedDeliveryMinTime;
@synthesize estimatedDeliveryMaxTime = _estimatedDeliveryMaxTime;
@synthesize importCharge = _importCharge;
@synthesize any = _any;

// class meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(PicoClassSchema *)getClassMetaData {
    return nil;
}

// property meta-data method
// note: this method is only for internal use, DO NOT CHANGE!
+(NSMutableDictionary *)getPropertyMetaData {
    NSMutableDictionary *map = [NSMutableDictionary dictionary];
    
    PicoPropertySchema *ps = nil;
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingInsuranceCost" propertyName:@"shippingInsuranceCost" type:PICO_TYPE_OBJECT clazz:[Shopping_AmountType class]];
    [map setObject:ps forKey:@"shippingInsuranceCost"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingServiceName" propertyName:@"shippingServiceName" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"shippingServiceName"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingServiceAdditionalCost" propertyName:@"shippingServiceAdditionalCost" type:PICO_TYPE_OBJECT clazz:[Shopping_AmountType class]];
    [map setObject:ps forKey:@"shippingServiceAdditionalCost"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingServiceCost" propertyName:@"shippingServiceCost" type:PICO_TYPE_OBJECT clazz:[Shopping_AmountType class]];
    [map setObject:ps forKey:@"shippingServiceCost"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ShippingServicePriority" propertyName:@"shippingServicePriority" type:PICO_TYPE_INT clazz:nil];
    [map setObject:ps forKey:@"shippingServicePriority"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT_ARRAY xmlName:@"ShipsTo" propertyName:@"shipsTo" type:PICO_TYPE_STRING clazz:nil];
    [map setObject:ps forKey:@"shipsTo"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"EstimatedDeliveryMinTime" propertyName:@"estimatedDeliveryMinTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"estimatedDeliveryMinTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"EstimatedDeliveryMaxTime" propertyName:@"estimatedDeliveryMaxTime" type:PICO_TYPE_DATE clazz:nil];
    [map setObject:ps forKey:@"estimatedDeliveryMaxTime"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ELEMENT xmlName:@"ImportCharge" propertyName:@"importCharge" type:PICO_TYPE_OBJECT clazz:[Shopping_AmountType class]];
    [map setObject:ps forKey:@"importCharge"];
    [ps release];
    ps = [[PicoPropertySchema alloc] initWithKind:PICO_KIND_ANY_ELEMENT xmlName:@"any" propertyName:@"any" type:PICO_TYPE_ANYELEMENT clazz:nil];
    [map setObject:ps forKey:@"any"];
    [ps release];
    
    return map;
}



-(void)dealloc {
    self.shippingInsuranceCost = nil;
    self.shippingServiceName = nil;
    self.shippingServiceAdditionalCost = nil;
    self.shippingServiceCost = nil;
    self.shippingServicePriority = nil;
    self.shipsTo = nil;
    self.estimatedDeliveryMinTime = nil;
    self.estimatedDeliveryMaxTime = nil;
    self.importCharge = nil;
    self.any = nil;
    [super dealloc];
}

@end
