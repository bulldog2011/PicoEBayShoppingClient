// Generated by xsd compiler for ios/objective-c
// DO NOT CHANGE!

#import <Foundation/Foundation.h>
#import "PicoClassSchema.h"
#import "PicoPropertySchema.h"
#import "PicoConstants.h"
#import "PicoBindable.h"
#import "Shopping_AbstractRequestType.h"


@class Shopping_ProductIDType;

/**
 
 Splitting include reviews and guides from GetProducts.
 
 
 @ingroup ShoppingInterface
*/
@interface Shopping_FindReviewsAndGuidesRequestType : Shopping_AbstractRequestType {

@private
    Shopping_ProductIDType *_productID;
    NSString *_userID;
    NSString *_categoryID;
    NSNumber *_maxResultsPerPage;
    NSNumber *_pageNumber;
    NSString *_reviewSort;
    NSString *_sortOrder;

}


/**
 
 Use this to retrieve reviews (not guides) for one specific product.
 Specify the ID as a string, and use the type attribute
 to indicate the nature of the ID you are specifying.
 Same as FindProducts, supports Reference, ISBN, UPC, EAN.
 <br>
 <br>
 ProductID can be used in combination with UserID to return Reviews and Guides.
 ProductID and CategoryID cannot be used together.
 
 
 type : class Shopping_ProductIDType
*/
@property (nonatomic, retain) Shopping_ProductIDType *productID;

/**
 
 Retrieves reviews and guides written by the specified user.
 <br>
 <br>
 UserID can be combined with either ProductID or CategoryID but not both (as
 ProductID and CategoryID cannot be used together).
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *userID;

/**
 
 Specify a single CategoryID to restrict your query to a specific Guide category.
 <br>
 <br>
 If the specified category ID doesn't match an existing category
 for the site, an invalid-category error message is returned.
 To determine valid categories:<br>
 Use <b>findItemsAdvanced</b> from the <a href="http://www.developer.ebay.com/DevZone/finding/CallRef/index.html">Finding API</a> with CategoryHistogram value in the OutputSelector field 
 to retrieve matching categories. Then make another
 FindReviewsAndGuides call with the ID of a matching category.
 <br>
 <br>
 CategoryID can be used in combination with UserID to return Reviews and Guides.
 ProductID and CategoryID cannot be used together.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *categoryID;

/**
 
 Specifies the maximum number of reviews per page (not guides) in the returned list. If not
 specified, the default returns 5 results per page.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *maxResultsPerPage;

/**
 
 Specifies the number of the page of data to return in the current call.
 Specify a positive value equal to or lower than the number of pages
 available (which you determine by examining the results of your initial request).
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *pageNumber;

/**
 
 Include ReviewSort in your request if you want to sort by a parameter,
 such as CreationTime. See the SortOrder field for values for specifying
 that results are returned in ascending or descending order.
 (By default, results are returned in descending order.)
 
 
 type: string constant in Shopping_ReviewSortCodeType.h
*/
@property (nonatomic, retain) NSString *reviewSort;

/**
 
 Sorts search results in ascending or descending order, in conjunction
 with the value you specify in ReviewsSort. The default is descending
 order.
 <br> <br>
 For example, for the ReviewsSort value of CreationTime,
 and a SortOrder value of Descending, the most recently created
 reviews are returned first.
 
 
 type: string constant in Shopping_SortOrderCodeType.h
*/
@property (nonatomic, retain) NSString *sortOrder;


@end
